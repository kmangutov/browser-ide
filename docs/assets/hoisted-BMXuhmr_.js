const y=async()=>{const r=["https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/codemirror.min.js","https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/mode/python/python.min.js","https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/addon/edit/matchbrackets.min.js","https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/addon/edit/closebrackets.min.js"];for(const e of r)await new Promise((i,c)=>{const s=document.createElement("script");s.src=e,s.onload=i,s.onerror=c,document.head.appendChild(s)})},f=r=>{const e=CodeMirror(document.getElementById("codeEditor"),{value:r,mode:"python",theme:"monokai",lineNumbers:!0,indentUnit:4,lineWrapping:!0,matchBrackets:!0,autoCloseBrackets:!0,viewportMargin:1/0,gutters:["CodeMirror-linenumbers"],readOnly:!1,lineNumberFormatter:function(i){return i},extraKeys:{Tab:function(i){i.replaceSelection("    ","end")}}});return setTimeout(()=>{e.refresh()},100),e};let u;function h(){return u||(u=async function(){if(!window.loadPyodide){const e=document.createElement("script");e.src="https://cdn.jsdelivr.net/pyodide/v0.25.0/full/pyodide.js",document.head.appendChild(e),await new Promise(i=>e.onload=i)}console.log("Loading Pyodide...");const r=await window.loadPyodide();return console.log("Pyodide loaded successfully!"),console.log("Loading scikit-learn, numpy, and pandas..."),await r.loadPackage(["scikit-learn","numpy","pandas"]),console.log("ML packages loaded successfully!"),r}()),u}document.addEventListener("DOMContentLoaded",async()=>{const r=document.querySelectorAll(".pyodide-embed");await y(),r.forEach(e=>{const c=f("{code}"),s=e.querySelector("#runButton"),n=e.querySelector("#output");let m=h();n.innerText="Python environment loading...",s.addEventListener("click",async()=>{s.disabled=!0,n.innerText="Running...";try{const t=await m,a=c.getValue();let d="";t.setStdout({write:l=>{d+=l,n.innerText=d}}),t.setStderr({write:l=>{d+=`
Error: ${l}`,n.innerText=d}}),d="";const o=await t.runPythonAsync(a);o&&typeof o=="object"&&"error"in o?n.innerHTML=`<span class="error">Error: ${o.error}</span>`:o!=null&&d===""&&(typeof o=="object"?n.innerText=JSON.stringify(o,null,2):n.innerText=String(o))}catch(t){n.innerHTML=`<span class="error">Error: ${t.message||String(t)}</span>`,console.error("Python execution error:",t)}finally{s.disabled=!1}});const p=new IntersectionObserver(t=>{t[0].isIntersecting&&(m.then(()=>{n.innerText="Python environment ready. Click 'Run Code' to execute."}).catch(a=>{n.innerText=`Error loading Python: ${a.message}`}),p.disconnect())});p.observe(e)})});
