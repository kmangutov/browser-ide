let a;function f(){return a||(a=async function(){if(!window.loadPyodide){const t=document.createElement("script");t.src="https://cdn.jsdelivr.net/pyodide/v0.25.0/full/pyodide.js",document.head.appendChild(t),await new Promise(l=>t.onload=l)}console.log("Loading Pyodide...");const d=await window.loadPyodide();return console.log("Pyodide loaded successfully!"),console.log("Loading scikit-learn, numpy, and pandas..."),await d.loadPackage(["scikit-learn","numpy","pandas"]),console.log("ML packages loaded successfully!"),d}()),a}document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".pyodide-embed").forEach((t,l)=>{const s=t.querySelector("#runButton"),e=t.querySelector("#output"),p=t.querySelector(".code-display");let u=f();e.innerText="Python environment loading...",s.addEventListener("click",async()=>{s.disabled=!0,e.innerText="Running...";try{const o=await u,i=p.textContent;let r="";o.setStdout({write:c=>{r+=c,e.innerText=r}}),o.setStderr({write:c=>{r+=`
Error: ${c}`,e.innerText=r}}),r="";const n=await o.runPythonAsync(i);n&&typeof n=="object"&&"error"in n?(e.innerHTML=`<span class="error">Error: ${n.error}</span>`,console.error("Python error:",n.error)):n!=null&&r===""&&(typeof n=="object"?e.innerText=JSON.stringify(n,null,2):e.innerText=String(n))}catch(o){e.innerHTML=`<span class="error">Error: ${o.message||String(o)}</span>`,console.error("Python execution error:",o)}finally{s.disabled=!1}});const y=new IntersectionObserver(o=>{o[0].isIntersecting&&(u.then(()=>{e.innerText="Python environment ready. Click 'Run Code' to execute."}).catch(i=>{e.innerText=`Error loading Python: ${i.message}`,console.error("Failed to load Pyodide:",i)}),y.disconnect())});y.observe(t)})});
